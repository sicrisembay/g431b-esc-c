//$file${app::driver::uart::.::uart.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: g431b-esc.qm
// File:  ${app::driver::uart::.::uart.h}
//
// This code has been generated by QM 7.0.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// Copyright (c) 2005 Quantum Leaps, LLC. All rights reserved.
//
//                 ____________________________________
//                /                                   /
//               /    GGGGGGG    PPPPPPPP   LL       /
//              /   GG     GG   PP     PP  LL       /
//             /   GG          PP     PP  LL       /
//            /   GG   GGGGG  PPPPPPPP   LL       /
//           /   GG      GG  PP         LL       /
//          /     GGGGGGG   PP         LLLLLLL  /
//         /___________________________________/
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open-source software licensed under the GNU
// General Public License (GPL) as published by the Free Software Foundation
// (see <https://www.gnu.org/licenses>).
//
// NOTE:
// The GPL does NOT permit the incorporation of this code into proprietary
// programs. Please contact Quantum Leaps for commercial licensing options,
// which expressly supersede the GPL and are designed explicitly for
// closed-source distribution.
//
// Quantum Leaps contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${app::driver::uart::.::uart.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef APP_DRIVER_UART_H
#define APP_DRIVER_UART_H

#define DMA_BUFFER_SIZE            (8)

//$declare${app::driver::uart::event::uartMsgEvt} vvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${app::driver::uart::event::uartMsgEvt} ....................................
typedef struct {
// protected:
    QEvt super;

// private:
    uint8_t buf[DMA_BUFFER_SIZE];
    uint16_t bufLen;
} uartMsgEvt;
//$enddecl${app::driver::uart::event::uartMsgEvt} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/* opaque pointers to active object */
//$declare${app::driver::uart::AO_uart} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${app::driver::uart::AO_uart} ..............................................
extern QActive * const AO_uart;
//$enddecl${app::driver::uart::AO_uart} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${app::driver::uart::UART_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${app::driver::uart::UART_ctor} ............................................
void UART_ctor(
    UART_HandleTypeDef * pHandle,
    DMA_HandleTypeDef * pTxDMA,
    DMA_HandleTypeDef * pRxDMA);
//$enddecl${app::driver::uart::UART_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${app::driver::uart::UART_send} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${app::driver::uart::UART_send} ............................................
bool UART_send(
    uint8_t * const buf,
    const uint16_t size);
//$enddecl${app::driver::uart::UART_send} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif /* APP_DRIVER_UART_H */

